// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:ai_recording_visualizer/environments/environments.dart';
import 'package:firebase_dart/firebase_dart.dart';
import 'package:flutter/foundation.dart'
    show TargetPlatform, defaultTargetPlatform, kIsWeb;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions currentPlatform() {
    final projectId = environment.FIREBASE_PROJECT_ID;
    final measurementId = environment.FIREBASE_MEASUREMENT_ID;
    final messagingSenderId = environment.FIREBASE_MESSAGING_SENDER_ID;

    final web = FirebaseOptions(
      apiKey: environment.FIREBASE_WEB_API_KEY,
      appId: environment.FIREBASE_WEB_APP_ID,
      messagingSenderId: messagingSenderId,
      projectId: projectId,
      authDomain: '$projectId.firebaseapp.com',
      storageBucket: '$projectId.appspot.com',
      measurementId: measurementId,
    );

    final android = FirebaseOptions(
      apiKey: environment.FIREBASE_ANDROID_API_KEY,
      appId: environment.FIREBASE_ANDROID_APP_ID,
      messagingSenderId: messagingSenderId,
      projectId: projectId,
      storageBucket: '$projectId.appspot.com',
    );

    final ios = FirebaseOptions(
      apiKey: environment.FIREBASE_IOS_API_KEY,
      appId: environment.FIREBASE_IOS_APP_ID,
      messagingSenderId: messagingSenderId,
      projectId: projectId,
      storageBucket: '$projectId.appspot.com',
      iosClientId: environment.FIREBASE_IOS_CLIENT_ID,
      iosBundleId: 'com.example.aiRecordingVisualizer',
    );

    final macos = FirebaseOptions(
      apiKey: environment.FIREBASE_MACOS_API_KEY,
      appId: environment.FIREBASE_MACOS_APP_ID,
      messagingSenderId: messagingSenderId,
      projectId: projectId,
      storageBucket: '$projectId.appspot.com',
      iosClientId: environment.FIREBASE_MACOS_CLIENT_ID,
      iosBundleId: 'com.example.aiRecordingVisualizer.RunnerTests',
    );

    final windows = FirebaseOptions(
      apiKey: environment.FIREBASE_WINDOWS_API_KEY,
      appId: environment.FIREBASE_WINDOWS_APP_ID,
      messagingSenderId: messagingSenderId,
      projectId: projectId,
      storageBucket: '$projectId.appspot.com',
    );

    final linux = FirebaseOptions(
      apiKey: environment.FIREBASE_LINUX_API_KEY,
      appId: environment.FIREBASE_LINUX_APP_ID,
      messagingSenderId: messagingSenderId,
      projectId: projectId,
      storageBucket: '$projectId.appspot.com',
    );

    final fuchsia = FirebaseOptions(
      apiKey: environment.FIREBASE_FUCHSIA_API_KEY,
      appId: environment.FIREBASE_FUCHSIA_APP_ID,
      messagingSenderId: messagingSenderId,
      projectId: projectId,
      storageBucket: '$projectId.appspot.com',
    );

    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        return linux;
      case TargetPlatform.fuchsia:
        return fuchsia;
    }
  }
}
